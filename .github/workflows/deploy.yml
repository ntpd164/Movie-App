name: Deploy Fullstack App

on:
  push:
    branches:
      - main
      - test

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up environment variables
        run: |
          mkdir -p production
          touch production/.env
          echo "MONGODB_USERNAME=${{ secrets.MONGODB_USERNAME }}" >> production/.env
          echo "MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }}" >> production/.env
          echo "MONGODB_HOST=${{ secrets.MONGODB_HOST }}" >> production/.env
          echo "MONGODB_DATABASE=${{ secrets.MONGODB_DATABASE }}" >> production/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> production/.env
          echo "JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}" >> production/.env
          echo "DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}" >> production/.env

      - name: Verify .env file
        run: cat production/.env

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/movie_app_backend:latest -f backend/Dockerfile ./backend
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/movie_app_backend:latest

      - name: Build and push Frontend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/movie_app_frontend:latest -f frontend/Dockerfile ./frontend
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/movie_app_frontend:latest

      - name: Deploy using Docker Compose
        run: |
          # Pull image mới nhất từ Docker Hub
          docker compose -f production/docker-compose.yaml --env-file production/.env pull

          # Dừng và xóa container, network cũ (giữ volume)
          docker compose -f production/docker-compose.yaml --env-file production/.env down

          # Khởi động lại container với image mới và force recreate
          docker compose -f production/docker-compose.yaml --env-file production/.env up -d --force-recreate
